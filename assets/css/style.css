/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
@font-face {
  font-family: "Graphik LCG";
  font-weight: normal;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/GraphikLCG-Regular.woff2") format("woff2"), url("../fonts/GraphikLCG-Regular.woff") format("woff");
}
@font-face {
  font-family: "Graphik LCG";
  font-weight: 600;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/GraphikLCG-Semibold.woff2") format("woff2"), url("../fonts/GraphikLCG-Semibold.woff") format("woff");
}
.work, .quality, .time, .control {
  margin-top: 100px;
  margin-bottom: 125px;
  display: flex;
  gap: 20px;
}

.work__content, .quality__content, .time__content, .control__content {
  flex-grow: 1;
  flex-basis: 200px;
}

.work__title, .quality__title, .time__title, .control__title {
  margin: 0;
  font-weight: 600;
  line-height: 1.2;
}

.work__description, .quality__description, .time__description, .control__description {
  font-size: 1.25rem;
  line-height: 1.5;
}

.work__picture, .quality__picture, .time__picture, .control__picture {
  flex-grow: 1;
  flex-basis: 200px;
  background-color: #fff8e4;
}

.work__image, .quality__image, .time__image, .control__image {
  width: 100%;
  border-radius: 18px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

.work__btn, .quality__btn, .time__btn, .control__btn {
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.5;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  overflow-x: hidden;
  width: 100%;
  font-family: "Graphik LCG", sans-serif;
  font-size: 15px;
  font-weight: 400;
}

a {
  text-decoration: none;
  color: #000000;
}

h1 {
  font-weight: 600;
  line-height: 1.08;
}

h2 {
  text-align: center;
  font-weight: 600;
  line-height: 1.2;
}

u {
  text-decoration: none;
  border-bottom: 1px solid;
}

.container {
  max-width: 1380px;
  margin: 0 auto;
  padding-right: 20px;
  padding-left: 20px;
}

.btn {
  display: block;
  padding: 0.5em 1em;
  border-width: 1px;
  border-style: solid;
  border-radius: 0;
}

.btn--light {
  border-color: rgba(0, 0, 0, 0.5);
  background-color: #ffffff;
}

.btn--accent {
  color: #ffffff;
  border-color: #ff6336;
  background-color: #ff6336;
}

.btn--md {
  min-width: 160px;
  min-height: 45px;
}

.header {
  position: relative;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #ffffff;
}

.header-menu {
  position: relative;
  display: flex;
  align-items: center;
  padding-top: 30px;
  padding-bottom: 30px;
  gap: 30px;
}
.header-menu::after {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 100vw;
  height: 1px;
  margin-left: -50vw;
  content: "";
  background-color: #cccccc;
}
.header-menu__navbar {
  flex-grow: 1;
}

.header-navbar__btn {
  position: relative;
  width: 30px;
  height: 22.5px;
  margin: 0 auto;
  cursor: pointer;
  transition: 0.5s ease-in-out;
  transform: rotate(0deg);
}
.header-navbar__btn-row {
  position: absolute;
  left: 0;
  display: block;
  width: 100%;
  height: 3px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  border-radius: 3px;
  background: #ff6336;
}
.header-navbar__btn-row:nth-child(1) {
  top: 0;
}
.header-navbar__btn-row:nth-child(2) {
  top: 9px;
}
.header-navbar__btn-row:nth-child(3) {
  top: 18px;
}
.header-navbar__btn.active span:nth-child(1) {
  top: 9px;
  transform: rotate(135deg);
}
.header-navbar__btn.active span:nth-child(2) {
  left: -30px;
  opacity: 0;
}
.header-navbar__btn.active span:nth-child(3) {
  top: 9px;
  transform: rotate(-135deg);
}
.header-navbar__list {
  display: flex;
  column-gap: 20px;
  margin: 0;
  padding: 0;
  list-style: none;
}
.header-navbar__link {
  display: block;
}

.header-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}

.header-content {
  display: grid;
  align-content: center;
  flex-grow: 1;
  padding-top: 80px;
  padding-bottom: 80px;
  row-gap: 20px;
}
.header-content__title {
  margin: 0;
  grid-area: ttl;
}
.header-content__description {
  margin-bottom: 20px;
  line-height: 1.4;
  grid-area: dsc;
}
.header-content__actions {
  display: flex;
  column-gap: 10px;
  grid-area: act;
}
.header-content__picture {
  display: flex;
  align-items: center;
  justify-content: center;
  grid-area: img;
}
.header-content__notes {
  grid-area: nts;
}

.brands {
  background-color: #ff9c7d;
}
.brands__title {
  margin: 0 0 40px;
}
.brands__list {
  display: grid;
  align-items: center;
  gap: 40px 20px;
}

.time {
  flex-direction: row-reverse;
}
.work {
  flex-direction: row-reverse;
}
.opportunities {
  background-color: #fff8e4;
  padding: 120px 0;
}
.opportunities__title {
  margin: 0 0 80px;
}
.opportunities__content {
  display: grid;
}

.opportunity-item {
  display: flex;
  gap: 30px;
  flex-direction: column;
  text-align: center;
}
.opportunity-item__title {
  margin: 0;
}
.opportunity-item__description {
  margin: 0;
}
.opportunity-item__picture {
  order: -1;
}
@media (min-width: 576px) {
  .header-content__btn {
    min-width: 160px;
  }
}
@media (min-width: 992px) {
  .work, .quality, .time, .control {
    align-items: center;
  }
  .work__picture, .quality__picture, .time__picture, .control__picture {
    padding: 190px 95px;
  }
  .btn--sm {
    min-width: 120px;
    min-height: 45px;
  }
  .header-navbar__btn {
    display: none;
  }
  .header-content__description {
    padding-right: 70px;
  }
  .header-content__image {
    width: 100%;
  }
  .opportunities__content {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (min-width: 1200px) {
  .work__title, .quality__title, .time__title, .control__title {
    font-size: 50px;
  }
  h1 {
    font-size: 65px;
  }
  h2 {
    font-size: 50px;
  }
  .header-navbar__link {
    padding: 0.5em 20px;
  }
  .header-content {
    grid-template-areas: "ttl img" "dsc img" "act img" "nts img";
    grid-template-columns: 580px 1fr;
  }
  .header-content__description {
    font-size: 25px;
  }
  .brands {
    padding-top: 125px;
    padding-bottom: 125px;
  }
  .brands__list {
    justify-content: space-between;
    grid-template-columns: repeat(auto-fit, minmax(50px, max-content));
  }
  .opportunities__content {
    padding: 0 40px;
    gap: 110px;
  }
}
@media (min-width: 1380px) {
  .work__content, .quality__content, .time__content, .control__content {
    padding-right: 160px;
  }
}
@media (max-width: 1379.8px) and (min-width: 1200px) {
  .work__content, .quality__content, .time__content, .control__content {
    padding-right: 60px;
  }
}
@media (max-width: 1199.8px) {
  .header-content__description {
    font-size: 20px;
  }
  .opportunities__content {
    gap: 40px;
  }
}
@media (max-width: 1199.8px) and (min-width: 992px) {
  .work__title, .quality__title, .time__title, .control__title {
    font-size: 40px;
  }
  h1 {
    font-size: 50px;
  }
  h2 {
    font-size: 40px;
  }
  .header-navbar__link {
    padding: 0.5em 0.25em;
  }
  .header-content {
    grid-template-areas: "ttl img" "dsc img" "act img" "nts img";
    grid-template-columns: 50% 1fr;
  }
  .brands {
    padding-top: 100px;
    padding-bottom: 100px;
  }
  .brands__list {
    justify-content: space-evenly;
    grid-template-columns: repeat(3, minmax(50px, max-content));
    justify-items: center;
  }
}
@media (max-width: 991.8px) {
  .work, .quality, .time, .control {
    flex-direction: column;
  }
  .work__title, .quality__title, .time__title, .control__title {
    font-size: 30px;
  }
  .work__picture, .quality__picture, .time__picture, .control__picture {
    padding: 50px;
  }
  h1 {
    text-align: center;
    font-size: 40px;
  }
  h2 {
    font-size: 30px;
  }
  .btn--sm {
    min-width: 100px;
    min-height: 40px;
  }
  .header-menu__logo {
    flex-basis: 10%;
    flex-grow: 1;
    flex-shrink: 1;
  }
  .header-menu__navbar {
    flex-basis: 10%;
    flex-shrink: 0;
  }
  .header-menu__actions {
    flex-basis: 10%;
    flex-grow: 1;
    flex-shrink: 1;
  }
  .header-navbar__list {
    position: absolute;
    top: 100%;
    right: -20px;
    left: -20px;
    display: none;
    flex-grow: 1;
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    background-color: rgba(255, 255, 255, 0.98);
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.25);
  }
  .header-navbar__link {
    padding: 0.75em;
  }
  .header-content {
    grid-template-areas: "ttl" "dsc" "img" "act" "nts";
  }
  .header-content__description {
    text-align: center;
  }
  .header-content__actions {
    justify-content: center;
  }
  .header-content__notes {
    text-align: center;
  }
  .brands {
    padding-top: 80px;
    padding-bottom: 80px;
  }
}
@media (max-width: 991.8px) and (min-width: 576px) {
  .header-content__title {
    padding-right: 60px;
    padding-left: 60px;
  }
  .brands__list {
    justify-content: space-evenly;
    grid-template-columns: repeat(2, minmax(50px, max-content));
    justify-items: center;
  }
  .opportunities__content {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 991.8px) and (min-width: 768px) {
  .work, .quality, .time, .control {
    width: 80%;
    margin-left: auto;
    margin-right: auto;
  }
  .header-content__image {
    width: 50%;
  }
}
@media (max-width: 767.8px) {
  .header-menu {
    flex-direction: column;
  }
  .header-menu__navbar {
    order: 2;
  }
  .header-content__image {
    width: 70%;
  }
}
@media (max-width: 575.8px) {
  .header-content__btn {
    min-width: 120px;
  }
  .brands__list {
    justify-items: center;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */